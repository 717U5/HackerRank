import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    public static void miniMaxSum(List<Integer> arr) {
        arr.sort(Comparator.naturalOrder()); //sort the array in natural order
        int l = arr.size(); //length of array
        long min = 0;
        long max = 0;
        
        //use loop to sum up for min and max
        for(int i=0; i<l-1; i++){
            min += arr.get(i);
        }
        
        for(int i=1; i<l; i++){
            max += arr.get(i);
        }
        
        System.out.print(min+" "+max);
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.miniMaxSum(arr);

        bufferedReader.close();
    }
}
